// AUTOGENERATED FROM index-windows-874.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-windows-874.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    8364, 129, 130, 131, 132, 8230, 134, 135, 136, 137, 138, 139, 140, 141,
    142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 152, 153, 154,
    155, 156, 157, 158, 159, 160, 3585, 3586, 3587, 3588, 3589, 3590, 3591,
    3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603,
    3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615,
    3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627,
    3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639,
    3640, 3641, 3642, 65535, 65535, 65535, 65535, 3647, 3648, 3649, 3650, 3651,
    3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663,
    3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675,
    65535, 65535, 65535, 65535,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[(code - 0x80) as uint]
}

pub fn backward(code: u16) -> u8 {
    match code {
        8364 => 128, 129 => 129, 130 => 130, 131 => 131, 132 => 132,
        8230 => 133, 134 => 134, 135 => 135, 136 => 136, 137 => 137,
        138 => 138, 139 => 139, 140 => 140, 141 => 141, 142 => 142, 143 => 143,
        144 => 144, 8216 => 145, 8217 => 146, 8220 => 147, 8221 => 148,
        8226 => 149, 8211 => 150, 8212 => 151, 152 => 152, 153 => 153,
        154 => 154, 155 => 155, 156 => 156, 157 => 157, 158 => 158, 159 => 159,
        160 => 160, 3585 => 161, 3586 => 162, 3587 => 163, 3588 => 164,
        3589 => 165, 3590 => 166, 3591 => 167, 3592 => 168, 3593 => 169,
        3594 => 170, 3595 => 171, 3596 => 172, 3597 => 173, 3598 => 174,
        3599 => 175, 3600 => 176, 3601 => 177, 3602 => 178, 3603 => 179,
        3604 => 180, 3605 => 181, 3606 => 182, 3607 => 183, 3608 => 184,
        3609 => 185, 3610 => 186, 3611 => 187, 3612 => 188, 3613 => 189,
        3614 => 190, 3615 => 191, 3616 => 192, 3617 => 193, 3618 => 194,
        3619 => 195, 3620 => 196, 3621 => 197, 3622 => 198, 3623 => 199,
        3624 => 200, 3625 => 201, 3626 => 202, 3627 => 203, 3628 => 204,
        3629 => 205, 3630 => 206, 3631 => 207, 3632 => 208, 3633 => 209,
        3634 => 210, 3635 => 211, 3636 => 212, 3637 => 213, 3638 => 214,
        3639 => 215, 3640 => 216, 3641 => 217, 3642 => 218, 3647 => 223,
        3648 => 224, 3649 => 225, 3650 => 226, 3651 => 227, 3652 => 228,
        3653 => 229, 3654 => 230, 3655 => 231, 3656 => 232, 3657 => 233,
        3658 => 234, 3659 => 235, 3660 => 236, 3661 => 237, 3662 => 238,
        3663 => 239, 3664 => 240, 3665 => 241, 3666 => 242, 3667 => 243,
        3668 => 244, 3669 => 245, 3670 => 246, 3671 => 247, 3672 => 248,
        3673 => 249, 3674 => 250, 3675 => 251, _ => 0
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(128, 256) {
            let i = i as u8;
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
