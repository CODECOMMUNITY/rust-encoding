// AUTOGENERATED FROM index-windows-1255.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-windows-1255.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    8364, 129, 8218, 402, 8222, 8230, 8224, 8225, 710, 8240, 138, 8249, 140,
    141, 142, 143, 144, 8216, 8217, 8220, 8221, 8226, 8211, 8212, 732, 8482,
    154, 8250, 156, 157, 158, 159, 160, 161, 162, 163, 8362, 165, 166, 167,
    168, 169, 215, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182,
    183, 184, 185, 247, 187, 188, 189, 190, 191, 1456, 1457, 1458, 1459, 1460,
    1461, 1462, 1463, 1464, 1465, 65535, 1467, 1468, 1469, 1470, 1471, 1472,
    1473, 1474, 1475, 1520, 1521, 1522, 1523, 1524, 65535, 65535, 65535, 65535,
    65535, 65535, 65535, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496,
    1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508,
    1509, 1510, 1511, 1512, 1513, 1514, 65535, 65535, 8206, 8207, 65535,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[(code - 0x80) as uint]
}

pub fn backward(code: u16) -> u8 {
    match code {
        8364 => 128, 129 => 129, 8218 => 130, 402 => 131, 8222 => 132,
        8230 => 133, 8224 => 134, 8225 => 135, 710 => 136, 8240 => 137,
        138 => 138, 8249 => 139, 140 => 140, 141 => 141, 142 => 142,
        143 => 143, 144 => 144, 8216 => 145, 8217 => 146, 8220 => 147,
        8221 => 148, 8226 => 149, 8211 => 150, 8212 => 151, 732 => 152,
        8482 => 153, 154 => 154, 8250 => 155, 156 => 156, 157 => 157,
        158 => 158, 159 => 159, 160 => 160, 161 => 161, 162 => 162, 163 => 163,
        8362 => 164, 165 => 165, 166 => 166, 167 => 167, 168 => 168,
        169 => 169, 215 => 170, 171 => 171, 172 => 172, 173 => 173, 174 => 174,
        175 => 175, 176 => 176, 177 => 177, 178 => 178, 179 => 179, 180 => 180,
        181 => 181, 182 => 182, 183 => 183, 184 => 184, 185 => 185, 247 => 186,
        187 => 187, 188 => 188, 189 => 189, 190 => 190, 191 => 191,
        1456 => 192, 1457 => 193, 1458 => 194, 1459 => 195, 1460 => 196,
        1461 => 197, 1462 => 198, 1463 => 199, 1464 => 200, 1465 => 201,
        1467 => 203, 1468 => 204, 1469 => 205, 1470 => 206, 1471 => 207,
        1472 => 208, 1473 => 209, 1474 => 210, 1475 => 211, 1520 => 212,
        1521 => 213, 1522 => 214, 1523 => 215, 1524 => 216, 1488 => 224,
        1489 => 225, 1490 => 226, 1491 => 227, 1492 => 228, 1493 => 229,
        1494 => 230, 1495 => 231, 1496 => 232, 1497 => 233, 1498 => 234,
        1499 => 235, 1500 => 236, 1501 => 237, 1502 => 238, 1503 => 239,
        1504 => 240, 1505 => 241, 1506 => 242, 1507 => 243, 1508 => 244,
        1509 => 245, 1510 => 246, 1511 => 247, 1512 => 248, 1513 => 249,
        1514 => 250, 8206 => 253, 8207 => 254, _ => 0
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(128, 256) {
            let i = i as u8;
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
