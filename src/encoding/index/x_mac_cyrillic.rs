// AUTOGENERATED FROM index-x-mac-cyrillic.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-x-mac-cyrillic.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051,
    1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063,
    1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 8224, 176, 1168, 163, 167,
    8226, 182, 1030, 174, 169, 8482, 1026, 1106, 8800, 1027, 1107, 8734, 177,
    8804, 8805, 1110, 181, 1169, 1032, 1028, 1108, 1031, 1111, 1033, 1113,
    1034, 1114, 1112, 1029, 172, 8730, 402, 8776, 8710, 171, 187, 8230, 160,
    1035, 1115, 1036, 1116, 1109, 8211, 8212, 8220, 8221, 8216, 8217, 247,
    8222, 1038, 1118, 1039, 1119, 8470, 1025, 1105, 1103, 1072, 1073, 1074,
    1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086,
    1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098,
    1099, 1100, 1101, 1102, 8364,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[(code - 0x80) as uint]
}

pub fn backward(code: u16) -> u8 {
    match code {
        1040 => 128, 1041 => 129, 1042 => 130, 1043 => 131, 1044 => 132,
        1045 => 133, 1046 => 134, 1047 => 135, 1048 => 136, 1049 => 137,
        1050 => 138, 1051 => 139, 1052 => 140, 1053 => 141, 1054 => 142,
        1055 => 143, 1056 => 144, 1057 => 145, 1058 => 146, 1059 => 147,
        1060 => 148, 1061 => 149, 1062 => 150, 1063 => 151, 1064 => 152,
        1065 => 153, 1066 => 154, 1067 => 155, 1068 => 156, 1069 => 157,
        1070 => 158, 1071 => 159, 8224 => 160, 176 => 161, 1168 => 162,
        163 => 163, 167 => 164, 8226 => 165, 182 => 166, 1030 => 167,
        174 => 168, 169 => 169, 8482 => 170, 1026 => 171, 1106 => 172,
        8800 => 173, 1027 => 174, 1107 => 175, 8734 => 176, 177 => 177,
        8804 => 178, 8805 => 179, 1110 => 180, 181 => 181, 1169 => 182,
        1032 => 183, 1028 => 184, 1108 => 185, 1031 => 186, 1111 => 187,
        1033 => 188, 1113 => 189, 1034 => 190, 1114 => 191, 1112 => 192,
        1029 => 193, 172 => 194, 8730 => 195, 402 => 196, 8776 => 197,
        8710 => 198, 171 => 199, 187 => 200, 8230 => 201, 160 => 202,
        1035 => 203, 1115 => 204, 1036 => 205, 1116 => 206, 1109 => 207,
        8211 => 208, 8212 => 209, 8220 => 210, 8221 => 211, 8216 => 212,
        8217 => 213, 247 => 214, 8222 => 215, 1038 => 216, 1118 => 217,
        1039 => 218, 1119 => 219, 8470 => 220, 1025 => 221, 1105 => 222,
        1103 => 223, 1072 => 224, 1073 => 225, 1074 => 226, 1075 => 227,
        1076 => 228, 1077 => 229, 1078 => 230, 1079 => 231, 1080 => 232,
        1081 => 233, 1082 => 234, 1083 => 235, 1084 => 236, 1085 => 237,
        1086 => 238, 1087 => 239, 1088 => 240, 1089 => 241, 1090 => 242,
        1091 => 243, 1092 => 244, 1093 => 245, 1094 => 246, 1095 => 247,
        1096 => 248, 1097 => 249, 1098 => 250, 1099 => 251, 1100 => 252,
        1101 => 253, 1102 => 254, 8364 => 255, _ => 0
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(128, 256) {
            let i = i as u8;
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
