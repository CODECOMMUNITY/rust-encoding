// AUTOGENERATED FROM index-iso-8859-7.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-iso-8859-7.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142,
    143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,
    158, 159, 160, 8216, 8217, 163, 8364, 8367, 166, 167, 168, 169, 890, 171,
    172, 173, 65535, 8213, 176, 177, 178, 179, 900, 901, 902, 183, 904, 905,
    906, 187, 908, 189, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920,
    921, 922, 923, 924, 925, 926, 927, 928, 929, 65535, 931, 932, 933, 934,
    935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949,
    950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
    965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 65535,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[(code - 0x80) as uint]
}

pub fn backward(code: u16) -> u8 {
    match code {
        128 => 128, 129 => 129, 130 => 130, 131 => 131, 132 => 132, 133 => 133,
        134 => 134, 135 => 135, 136 => 136, 137 => 137, 138 => 138, 139 => 139,
        140 => 140, 141 => 141, 142 => 142, 143 => 143, 144 => 144, 145 => 145,
        146 => 146, 147 => 147, 148 => 148, 149 => 149, 150 => 150, 151 => 151,
        152 => 152, 153 => 153, 154 => 154, 155 => 155, 156 => 156, 157 => 157,
        158 => 158, 159 => 159, 160 => 160, 8216 => 161, 8217 => 162,
        163 => 163, 8364 => 164, 8367 => 165, 166 => 166, 167 => 167,
        168 => 168, 169 => 169, 890 => 170, 171 => 171, 172 => 172, 173 => 173,
        8213 => 175, 176 => 176, 177 => 177, 178 => 178, 179 => 179,
        900 => 180, 901 => 181, 902 => 182, 183 => 183, 904 => 184, 905 => 185,
        906 => 186, 187 => 187, 908 => 188, 189 => 189, 910 => 190, 911 => 191,
        912 => 192, 913 => 193, 914 => 194, 915 => 195, 916 => 196, 917 => 197,
        918 => 198, 919 => 199, 920 => 200, 921 => 201, 922 => 202, 923 => 203,
        924 => 204, 925 => 205, 926 => 206, 927 => 207, 928 => 208, 929 => 209,
        931 => 211, 932 => 212, 933 => 213, 934 => 214, 935 => 215, 936 => 216,
        937 => 217, 938 => 218, 939 => 219, 940 => 220, 941 => 221, 942 => 222,
        943 => 223, 944 => 224, 945 => 225, 946 => 226, 947 => 227, 948 => 228,
        949 => 229, 950 => 230, 951 => 231, 952 => 232, 953 => 233, 954 => 234,
        955 => 235, 956 => 236, 957 => 237, 958 => 238, 959 => 239, 960 => 240,
        961 => 241, 962 => 242, 963 => 243, 964 => 244, 965 => 245, 966 => 246,
        967 => 247, 968 => 248, 969 => 249, 970 => 250, 971 => 251, 972 => 252,
        973 => 253, 974 => 254, _ => 0
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(128, 256) {
            let i = i as u8;
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
