// AUTOGENERATED FROM index-koi8-r.txt, ORIGINAL COMMENT FOLLOWS:
//
// Any copyright is dedicated to the Public Domain.
// http://creativecommons.org/publicdomain/zero/1.0/
//
// For details on index-koi8-r.txt see the Encoding Standard
// http://encoding.spec.whatwg.org/

static FORWARD_TABLE: &'static [u16] = &[
    9472, 9474, 9484, 9488, 9492, 9496, 9500, 9508, 9516, 9524, 9532, 9600,
    9604, 9608, 9612, 9616, 9617, 9618, 9619, 8992, 9632, 8729, 8730, 8776,
    8804, 8805, 160, 8993, 176, 178, 183, 247, 9552, 9553, 9554, 1105, 9555,
    9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567,
    9568, 9569, 1025, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578,
    9579, 9580, 169, 1102, 1072, 1073, 1094, 1076, 1077, 1092, 1075, 1093,
    1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1103, 1088, 1089, 1090,
    1091, 1078, 1074, 1100, 1099, 1079, 1096, 1101, 1097, 1095, 1098, 1070,
    1040, 1041, 1062, 1044, 1045, 1060, 1043, 1061, 1048, 1049, 1050, 1051,
    1052, 1053, 1054, 1055, 1071, 1056, 1057, 1058, 1059, 1046, 1042, 1068,
    1067, 1047, 1064, 1069, 1065, 1063, 1066,
];

#[inline]
pub fn forward(code: u8) -> u16 {
    FORWARD_TABLE[(code - 0x80) as uint]
}

pub fn backward(code: u16) -> u8 {
    match code {
        9472 => 128, 9474 => 129, 9484 => 130, 9488 => 131, 9492 => 132,
        9496 => 133, 9500 => 134, 9508 => 135, 9516 => 136, 9524 => 137,
        9532 => 138, 9600 => 139, 9604 => 140, 9608 => 141, 9612 => 142,
        9616 => 143, 9617 => 144, 9618 => 145, 9619 => 146, 8992 => 147,
        9632 => 148, 8729 => 149, 8730 => 150, 8776 => 151, 8804 => 152,
        8805 => 153, 160 => 154, 8993 => 155, 176 => 156, 178 => 157,
        183 => 158, 247 => 159, 9552 => 160, 9553 => 161, 9554 => 162,
        1105 => 163, 9555 => 164, 9556 => 165, 9557 => 166, 9558 => 167,
        9559 => 168, 9560 => 169, 9561 => 170, 9562 => 171, 9563 => 172,
        9564 => 173, 9565 => 174, 9566 => 175, 9567 => 176, 9568 => 177,
        9569 => 178, 1025 => 179, 9570 => 180, 9571 => 181, 9572 => 182,
        9573 => 183, 9574 => 184, 9575 => 185, 9576 => 186, 9577 => 187,
        9578 => 188, 9579 => 189, 9580 => 190, 169 => 191, 1102 => 192,
        1072 => 193, 1073 => 194, 1094 => 195, 1076 => 196, 1077 => 197,
        1092 => 198, 1075 => 199, 1093 => 200, 1080 => 201, 1081 => 202,
        1082 => 203, 1083 => 204, 1084 => 205, 1085 => 206, 1086 => 207,
        1087 => 208, 1103 => 209, 1088 => 210, 1089 => 211, 1090 => 212,
        1091 => 213, 1078 => 214, 1074 => 215, 1100 => 216, 1099 => 217,
        1079 => 218, 1096 => 219, 1101 => 220, 1097 => 221, 1095 => 222,
        1098 => 223, 1070 => 224, 1040 => 225, 1041 => 226, 1062 => 227,
        1044 => 228, 1045 => 229, 1060 => 230, 1043 => 231, 1061 => 232,
        1048 => 233, 1049 => 234, 1050 => 235, 1051 => 236, 1052 => 237,
        1053 => 238, 1054 => 239, 1055 => 240, 1071 => 241, 1056 => 242,
        1057 => 243, 1058 => 244, 1059 => 245, 1046 => 246, 1042 => 247,
        1068 => 248, 1067 => 249, 1047 => 250, 1064 => 251, 1069 => 252,
        1065 => 253, 1063 => 254, 1066 => 255, _ => 0
    }
}

#[cfg(test)]
mod tests {
    use super::{forward, backward};

    #[test]
    fn test_correct_table() {
        for i in range(128, 256) {
            let i = i as u8;
            let j = forward(i);
            if j != 0xffff { assert_eq!(backward(j), i); }
        }
    }
}
